{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nil/projetos/clocker/pages/schedule.js\";\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { addDays, subDays } from 'date-fns';\nimport { useFecth } from '@refetty/react';\nimport { ChevronLeftIcon, ChevronRightIcon } from '@chakra-ui/icons';\nimport { Button, Container, IconButton, Box, Spinner } from '@chakra-ui/react';\nimport { Logo, useAuth, formatDate } from '../components';\nimport { axios } from 'axios';\n\nconst getSchedule = async when => axios({\n  method: 'get',\n  url: '/api/schedule',\n  params: {\n    when,\n    username: window.location.pathname\n  },\n  headers: {\n    Autorization: `Bearer ${token}`\n  }\n});\n\nconst Header = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  p: 4,\n  display: \"flex\",\n  alignIntens: \"center\",\n  justifyContent: \"space-between\",\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this);\n\nconst timeBlock = () => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    p: 8,\n    bg: \"blue.500\",\n    color: \"white\",\n    children: time\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\nexport default function Agenda() {\n  const [auth, {\n    logout\n  }] = useAuth();\n  const router = useRouter();\n  const {\n    0: when,\n    1: setWhen\n  } = useState(() => new Date());\n  const [data, {\n    loading,\n    status,\n    error\n  }, fetch] = useFecth(getSchedule, {\n    lazy: true\n  });\n\n  const addDay = () => setWhen(prevState => addDays(prevState, 1));\n\n  const removeDay = () => setWhen(prevState => subDays(prevState, 1));\n\n  useEffect(() => {\n    fetch(when);\n  }, [when]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        size: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: logout,\n          children: \"Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 8,\n      display: \"flex\",\n      alignIntens: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        icon: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 35\n        }, this),\n        bg: \"trasparent\",\n        onClick: removeDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flex: 1,\n        textAlign: \"center\",\n        children: formatDate(when, 'PPPP')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        icon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 35\n        }, this),\n        bg: \"trasparent\",\n        onClick: addDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      p: 4,\n      columns: 2,\n      spacing: 4,\n      children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {\n        thickness: \"4px\",\n        speed: \"0.65s\",\n        emptyColor: \"gray.200\",\n        color: \"blue.500\",\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this), data === null || data === void 0 ? void 0 : data.map(time => /*#__PURE__*/_jsxDEV(\"timeBlock\", {\n        time: time\n      }, time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 36\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/nil/projetos/clocker/pages/schedule.js"],"names":["useEffect","useState","useRouter","addDays","subDays","useFecth","ChevronLeftIcon","ChevronRightIcon","Button","Container","IconButton","Box","Spinner","Logo","useAuth","formatDate","axios","getSchedule","when","method","url","params","username","window","location","pathname","headers","Autorization","token","Header","children","timeBlock","time","Agenda","auth","logout","router","setWhen","Date","data","loading","status","error","fetch","lazy","addDay","prevState","removeDay","map"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport {useRouter} from 'next/router'\nimport { addDays, subDays } from 'date-fns'\nimport{ useFecth} from '@refetty/react'\n\nimport { ChevronLeftIcon, ChevronRightIcon} from '@chakra-ui/icons'\nimport { Button, Container, IconButton, Box, Spinner } from '@chakra-ui/react'\nimport { Logo, useAuth, formatDate } from '../components'  \nimport { axios} from 'axios'\n \n\n\n\nconst getSchedule = async (when) => axios({\n        method: 'get',\n        url: '/api/schedule',\n        params:{when, username:window.location.pathname},\n        headers:{\n            Autorization: `Bearer ${token}` \n        }\n        \n    })\n\n\nconst Header = ({children}) =>(\n    <Box p={4} display=\"flex\" alignIntens=\"center\" justifyContent=\"space-between\" >\n        {children}\n    </Box>\n)\n\nconst  timeBlock=()=>{\n    return(\n        <Button p={8}  bg=\"blue.500\" color=\"white\">\n            {time}\n        </Button>\n\n    )\n}\nexport default function Agenda() {\n    const [auth,{logout}] = useAuth()\n    const router = useRouter()\n    const [when, setWhen] = useState(() => new Date())\n    const [data,{loading,status,error}, fetch] = useFecth(getSchedule, {lazy:true})\n    const addDay = () =>setWhen(prevState => addDays(prevState, 1))\n    const removeDay = () => setWhen(prevState => subDays(prevState,1))\n\n \n      useEffect(()=>{\n        fetch(when)\n      },[when])\n\n    return (\n        <Container>\n            <Header>\n                <Logo size={150} />\n                 <div>\n                    <Button onClick={logout}>Sair</Button>\n                </div>\n\n            </Header>\n\n        \n            <Box mt={8} display=\"flex\" alignIntens=\"center\">\n                <IconButton icon={<ChevronLeftIcon />} bg=\"trasparent\" onClick={removeDay}/>\n                <Box flex={1} textAlign=\"center\">{formatDate(when,'PPPP')}</Box>\n                <IconButton icon={<ChevronRightIcon />} bg=\"trasparent\" onClick={addDay}/>\n            </Box>\n            <SimpleGrid p={4} columns={2} spacing={4}>\n                {loading && <Spinner thickness=\"4px\" speed=\"0.65s\" emptyColor=\"gray.200\" color=\"blue.500\" size=\"xl\"/>}\n                {data?.map(time => <timeBlock key={time} time={time} />)}\n            </SimpleGrid>\n        \n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}