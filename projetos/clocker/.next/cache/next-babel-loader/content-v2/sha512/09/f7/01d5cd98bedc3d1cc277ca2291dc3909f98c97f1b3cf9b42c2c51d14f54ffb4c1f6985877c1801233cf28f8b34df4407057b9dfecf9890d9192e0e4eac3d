{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nil/projetos/clocker/components/Auth/index.js\";\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { firebaseClient, persistenceMode } from '../../config/firebase/client';\nconst AuthContext = /*#__PURE__*/React.createContext([{}, () => {}]);\nexport const login = async ({\n  email,\n  password\n}) => {\n  firebaseClient.auth().setPersistence(persistenceMode);\n\n  try {\n    await firebaseClient.auth().signInWithEmailAndPassword(email, password);\n  } catch (error) {\n    console.log('LOGIN ERROR:', error);\n  }\n}; //const logout =() =>{}\n\nexport const signup = async ({\n  email,\n  password,\n  username\n}) => {\n  try {\n    await firebaseClient.auth().createUserWithEmailAndPassword(email, password);\n    await login(email, password); //setupProfile(token, username)\n  } catch (error) {\n    console.log('SIGNUP ERROR:', error);\n  }\n};\nexport const userAuth = () => {\n  const [auth] = useContext(AuthContext);\n  return [auth, {\n    login\n  }];\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: auth,\n    1: setAuth\n  } = useState({\n    loading: true,\n    user: false\n  });\n  useEffect(() => {\n    firebaseClient.auth().onAuthStateChanged(user => {\n      setAuth({\n        loading: false,\n        user\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: [auth, setAuth],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 6\n  }, this);\n};","map":{"version":3,"sources":["/home/nil/projetos/clocker/components/Auth/index.js"],"names":["React","useState","useEffect","firebaseClient","persistenceMode","AuthContext","createContext","login","email","password","auth","setPersistence","signInWithEmailAndPassword","error","console","log","signup","username","createUserWithEmailAndPassword","userAuth","useContext","AuthProvider","children","setAuth","loading","user","onAuthStateChanged"],"mappings":";;AAAC,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACD,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,8BAAhD;AACA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,CAAoB,CAAC,EAAD,EAAK,MAAK,CAAG,CAAb,CAApB,CAApB;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAO;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAP,KAA4B;AAC7CN,EAAAA,cAAc,CAACO,IAAf,GAAsBC,cAAtB,CAAqCP,eAArC;;AACA,MAAI;AACD,UAAMD,cAAc,CAACO,IAAf,GAAsBE,0BAAtB,CAAkDJ,KAAlD,EAA0DC,QAA1D,CAAN;AACD,GAFF,CAEG,OAAOI,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AACH;AACJ,CAPM,C,CASP;;AACA,OAAO,MAAMG,MAAM,GAAG,OAAO;AAACR,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBQ,EAAAA;AAAlB,CAAP,KAAsC;AACxD,MAAI;AACA,UAAMd,cAAc,CAACO,IAAf,GAAsBQ,8BAAtB,CAAqDV,KAArD,EAA4DC,QAA5D,CAAN;AACA,UAAMF,KAAK,CAACC,KAAD,EAAQC,QAAR,CAAX,CAFA,CAGA;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACH;AACJ,CARM;AAUP,OAAO,MAAMM,QAAQ,GAAG,MAAK;AACzB,QAAM,CAACT,IAAD,IAASU,UAAU,CAACf,WAAD,CAAzB;AAEA,SAAO,CAACK,IAAD,EAAO;AAACH,IAAAA;AAAD,GAAP,CAAP;AACH,CAJM;AAKP,OAAO,MAAMc,YAAY,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AACrC,QAAM;AAAA,OAACZ,IAAD;AAAA,OAAOa;AAAP,MAAkBtB,QAAQ,CAAC;AAC7BuB,IAAAA,OAAO,EAAC,IADqB;AAE7BC,IAAAA,IAAI,EAAC;AAFwB,GAAD,CAAhC;AAKAvB,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,cAAc,CAACO,IAAf,GAAsBgB,kBAAtB,CAAyCD,IAAI,IAAI;AAC/CF,MAAAA,OAAO,CAAC;AACNC,QAAAA,OAAO,EAAE,KADH;AAENC,QAAAA;AAFM,OAAD,CAAP;AAID,KALD;AAMD,GAPM,EAOJ,EAPI,CAAT;AASA,sBACC,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACf,IAAD,EAAMa,OAAN,CAA7B;AAAA,cACID;AADJ;AAAA;AAAA;AAAA;AAAA,UADD;AAKH,CApBM","sourcesContent":[" import * as React from 'react'\nimport { useState, useEffect } from 'react'\nimport { firebaseClient, persistenceMode } from '../../config/firebase/client'\nconst AuthContext = React.createContext([{}, () =>{ }])\n\nexport const login = async ({email, password}) =>{\n    firebaseClient.auth().setPersistence(persistenceMode)\n    try {\n       await firebaseClient.auth().signInWithEmailAndPassword( email,  password)\n     } catch (error) {\n        console.log('LOGIN ERROR:', error)\n    }\n}\n\n//const logout =() =>{}\nexport const signup = async ({email, password, username}) =>{\n    try {\n        await firebaseClient.auth().createUserWithEmailAndPassword(email, password)\n        await login(email, password)\n        //setupProfile(token, username)\n    } catch (error) {\n        console.log('SIGNUP ERROR:', error)        \n    }\n}\n\nexport const userAuth = () =>{\n    const [auth] = useContext(AuthContext) \n\n    return [auth, {login}]\n}\nexport const AuthProvider =({children})=>{\n    const [auth, setAuth] = useState({\n        loading:true,\n        user:false\n    })\n\n    useEffect(() => {\n        firebaseClient.auth().onAuthStateChanged(user => {\n          setAuth({\n            loading: false,\n            user\n          })\n        })\n      }, [])\n\n    return(\n     <AuthContext.Provider value={[auth,setAuth]}>\n        {children}\n    </AuthContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}