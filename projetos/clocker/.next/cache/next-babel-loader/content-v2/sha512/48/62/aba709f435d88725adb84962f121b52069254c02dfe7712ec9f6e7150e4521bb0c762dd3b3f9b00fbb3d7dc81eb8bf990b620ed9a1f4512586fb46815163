{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nil/projetos/clocker/components/TimeBox/index.js\";\nimport { Button, Modal, ModalBody, ModalCloseButton, ModalFooter, ModalOverlay } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nconst ModalTimeBlock = ({\n  isOpen,\n  onClose,\n  time\n}) => /*#__PURE__*/_jsxDEV(Modal, {\n  isOpen: isOpen,\n  onClose: onClose,\n  children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: \"Modal Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [\"Hor\\xE1rio: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"ghost\",\n        onClick: onClose,\n        children: \" Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        mr: 3,\n        onClick: onClick,\n        children: \"Reservar Hor\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 5\n}, this);\n\nexport const TimeBlock = ({\n  time\n}) => {\n  const {\n    isOpne,\n    setIsOpen\n  } = useState(false);\n\n  const toggle = () => setIsOpen(prevState = !prevState);\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    p: 8,\n    bg: \"blue.500\",\n    color: \"white\",\n    onClick: toggle,\n    children: [time, /*#__PURE__*/_jsxDEV(ModalTimeBlock, {\n      isOpen: isOpen,\n      onClose: toggle,\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"sources":["/home/nil/projetos/clocker/components/TimeBox/index.js"],"names":["Button","Modal","ModalBody","ModalCloseButton","ModalFooter","ModalOverlay","useState","ModalTimeBlock","isOpen","onClose","time","onClick","TimeBlock","isOpne","setIsOpen","toggle","prevState"],"mappings":";;AACA,SAAQA,MAAR,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,gBAAlC,EAAoDC,WAApD,EAAiEC,YAAjE,QAAsF,kBAAtF;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAD,kBACnB,QAAC,KAAD;AAAO,EAAA,MAAM,EAAIF,MAAjB;AAAyB,EAAA,OAAO,EAAEC,OAAlC;AAAA,0BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI,QAAC,YAAD;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAA,iCACcC,IADd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI,QAAC,WAAD;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAED,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,MAApB;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAkC,QAAA,OAAO,EAAEE,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;AAkBA,OAAO,MAAMC,SAAS,GAAE,CAAC;AAACF,EAAAA;AAAD,CAAD,KAAW;AAC/B,QAAM;AAACG,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBR,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMS,MAAM,GAAG,MAAKD,SAAS,CAACE,SAAS,GAAG,CAACA,SAAd,CAA7B;;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,CAAC,EAAE,CAAX;AAAc,IAAA,EAAE,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAC,OAAlC;AAA2C,IAAA,OAAO,EAAED,MAApD;AAAA,eACKL,IADL,eAEI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEF,MAAxB;AAAgC,MAAA,OAAO,EAAEO,MAAzC;AAAkD,MAAA,IAAI,EAAEL;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAZM","sourcesContent":["\nimport {Button, Modal, ModalBody, ModalCloseButton, ModalFooter, ModalOverlay, } from \"@chakra-ui/react\"\nimport { useState } from \"react\"\n\nconst ModalTimeBlock = ({ isOpen, onClose, time}) =>(\n    <Modal isOpen = {isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n            <ModalHeader>Modal Title</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n                Horário: {time}\n            </ModalBody>\n            <ModalFooter>\n                <Button variant=\"ghost\" onClick={onClose}> Cancelar</Button>\n                <Button colorScheme=\"blue\" mr={3} onClick={onClick} >\n                    Reservar Horário\n                </Button>\n            </ModalFooter>\n        </ModalContent>\n    </Modal>\n)\nexport const TimeBlock =({time}) =>{\n    const {isOpne, setIsOpen} = useState(false)\n    const toggle = () =>setIsOpen(prevState = !prevState)\n\n    return (\n        <Button p={8} bg=\"blue.500\" color=\"white\"  onClick={toggle}>\n            {time}\n            <ModalTimeBlock isOpen={isOpen} onClose={toggle}  time={time}/>\n        </Button>\n        \n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}