{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nil/projetos/clocker/components/TimeBox/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Modal, ModalBody, ModalCloseButton, ModalFooter, ModalOverlay } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nvar ModalTimeBlock = function ModalTimeBlock(_ref) {\n  var isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      time = _ref.time;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Modal Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [\"Hor\\xE1rio: \", time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          onClick: onClose,\n          children: \" Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"blue\",\n          mr: 3,\n          onClick: onClick,\n          children: \"Reservar Hor\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = ModalTimeBlock;\nexport var TimeBlock = function TimeBlock(_ref2) {\n  _s();\n\n  var time = _ref2.time;\n\n  var _useState = useState(false),\n      isOpne = _useState.isOpne,\n      setIsOpen = _useState.setIsOpen;\n\n  var toggle = function toggle() {\n    return setIsOpen(prevState = !prevState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    p: 8,\n    bg: \"blue.500\",\n    color: \"white\",\n    onClick: toggle,\n    children: [time, /*#__PURE__*/_jsxDEV(ModalTimeBlock, {\n      isOpen: isOpen,\n      onClose: toggle,\n      time: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TimeBlock, \"usa8YMc5D6r1lPs4X8LKY8Lb4zI=\");\n\n_c2 = TimeBlock;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalTimeBlock\");\n$RefreshReg$(_c2, \"TimeBlock\");","map":{"version":3,"sources":["/home/nil/projetos/clocker/components/TimeBox/index.js"],"names":["Button","Modal","ModalBody","ModalCloseButton","ModalFooter","ModalOverlay","useState","ModalTimeBlock","isOpen","onClose","time","onClick","TimeBlock","isOpne","setIsOpen","toggle","prevState"],"mappings":";;;;;;AACA,SAAQA,MAAR,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,gBAAlC,EAAoDC,WAApD,EAAiEC,YAAjE,QAAsF,kBAAtF;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWC,OAAX,QAAWA,OAAX;AAAA,MAAoBC,IAApB,QAAoBA,IAApB;AAAA,sBACnB,QAAC,KAAD;AAAO,IAAA,MAAM,EAAIF,MAAjB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAAA,4BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,YAAD;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI,QAAC,SAAD;AAAA,mCACcC,IADd;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAMI,QAAC,WAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,OAAhB;AAAwB,UAAA,OAAO,EAAED,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,WAAW,EAAC,MAApB;AAA2B,UAAA,EAAE,EAAE,CAA/B;AAAkC,UAAA,OAAO,EAAEE,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADmB;AAAA,CAAvB;;KAAMJ,c;AAkBN,OAAO,IAAMK,SAAS,GAAE,SAAXA,SAAW,QAAW;AAAA;;AAAA,MAATF,IAAS,SAATA,IAAS;;AAAA,kBACHJ,QAAQ,CAAC,KAAD,CADL;AAAA,MACxBO,MADwB,aACxBA,MADwB;AAAA,MAChBC,SADgB,aAChBA,SADgB;;AAE/B,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAKD,SAAS,CAACE,SAAS,GAAG,CAACA,SAAd,CAAd;AAAA,GAAf;;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,CAAC,EAAE,CAAX;AAAc,IAAA,EAAE,EAAC,UAAjB;AAA4B,IAAA,KAAK,EAAC,OAAlC;AAA2C,IAAA,OAAO,EAAED,MAApD;AAAA,eACKL,IADL,eAEI,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEF,MAAxB;AAAgC,MAAA,OAAO,EAAEO,MAAzC;AAAkD,MAAA,IAAI,EAAEL;AAAxD;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAZM;;GAAME,S;;MAAAA,S","sourcesContent":["\nimport {Button, Modal, ModalBody, ModalCloseButton, ModalFooter, ModalOverlay, } from \"@chakra-ui/react\"\nimport { useState } from \"react\"\n\nconst ModalTimeBlock = ({ isOpen, onClose, time}) =>(\n    <Modal isOpen = {isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n            <ModalHeader>Modal Title</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody>\n                Horário: {time}\n            </ModalBody>\n            <ModalFooter>\n                <Button variant=\"ghost\" onClick={onClose}> Cancelar</Button>\n                <Button colorScheme=\"blue\" mr={3} onClick={onClick} >\n                    Reservar Horário\n                </Button>\n            </ModalFooter>\n        </ModalContent>\n    </Modal>\n)\nexport const TimeBlock =({time}) =>{\n    const {isOpne, setIsOpen} = useState(false)\n    const toggle = () =>setIsOpen(prevState = !prevState)\n\n    return (\n        <Button p={8} bg=\"blue.500\" color=\"white\"  onClick={toggle}>\n            {time}\n            <ModalTimeBlock isOpen={isOpen} onClose={toggle}  time={time}/>\n        </Button>\n        \n    )\n\n}\n"]},"metadata":{},"sourceType":"module"}