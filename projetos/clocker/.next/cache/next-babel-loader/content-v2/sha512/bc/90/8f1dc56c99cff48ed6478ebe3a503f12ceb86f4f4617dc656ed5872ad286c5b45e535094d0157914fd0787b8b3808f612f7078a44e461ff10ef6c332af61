{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nil/projetos/clocker/pages/agenda.js\";\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFetch } from '@refetty/react';\nimport axios from 'axios';\nimport { addDays, subDays } from 'date-fns';\nimport { ChevronLeftIcon, ChevronRightIcon } from '@chakra-ui/icons';\nimport { Button, Container, Box, IconButton } from '@chakra-ui/react';\nimport { getToken } from './../config/firebase/client';\nimport { useAuth, Logo, formatDate } from './../components';\n\nconst getAgenda = async when => {\n  const token = await getToken();\n  return axios({\n    method: 'get',\n    url: '/api/agenda',\n    params: {\n      when\n    },\n    headers: {\n      Autorization: `Bearer ${token}`\n    }\n  });\n};\n\nconst Header = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(Box, {\n  p: 4,\n  display: \"flex\",\n  alignIntens: \"center\",\n  justifyContent: \"space-between\",\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this);\n\nexport default function Agenda() {\n  const [auth, {\n    logout\n  }] = useAuth();\n  const router = useRouter();\n  const {\n    0: when,\n    1: setWhen\n  } = useState(() => new Date());\n  const [data, {\n    loading,\n    status,\n    error\n  }, fetch] = useFetch(getAgenda, {\n    lazy: true\n  });\n\n  const addDay = () => setWhen(prevState => addDays(prevState, 1));\n\n  const removeDay = () => setWhen(prevState => subDays(prevState, 1));\n\n  useEffect(() => {\n    !auth.user && router.push('/');\n  }, [auth.user]);\n  useEffect(() => {\n    fetch(when);\n  }, [when]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        size: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: logout,\n          children: \"Sair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 8,\n      display: \"flex\",\n      alignIntens: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        icon: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 35\n        }, this),\n        bg: \"trasparent\",\n        onClick: removeDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flex: 1,\n        textAlign: \"center\",\n        children: formatDate(when, 'PPPP')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        icon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 35\n        }, this),\n        bg: \"trasparent\",\n        onClick: addDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/nil/projetos/clocker/pages/agenda.js"],"names":["useEffect","useState","useRouter","useFetch","axios","addDays","subDays","ChevronLeftIcon","ChevronRightIcon","Button","Container","Box","IconButton","getToken","useAuth","Logo","formatDate","getAgenda","when","token","method","url","params","headers","Autorization","Header","children","Agenda","auth","logout","router","setWhen","Date","data","loading","status","error","fetch","lazy","addDay","prevState","removeDay","user","push"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { useFetch } from '@refetty/react'\nimport axios from 'axios'\nimport { addDays, subDays } from 'date-fns'\n\nimport { ChevronLeftIcon, ChevronRightIcon } from '@chakra-ui/icons'\nimport { Button, Container, Box, IconButton } from '@chakra-ui/react'\n\nimport { getToken } from './../config/firebase/client'\nimport { useAuth, Logo, formatDate } from './../components'\nconst getAgenda = async (when) => {\n    const token = await getToken()\n    return axios({\n        method: 'get',\n        url: '/api/agenda',\n        params:{when},\n        headers:{\n            Autorization: `Bearer ${token}` \n        }\n        \n    })\n}\n\nconst Header = ({children}) =>(\n    <Box p={4} display=\"flex\" alignIntens=\"center\" justifyContent=\"space-between\" >\n        {children}\n    </Box>\n)\n\nexport default function Agenda() {\n    const [auth,{logout}] = useAuth()\n    const router = useRouter()\n    const [when, setWhen] = useState(() => new Date())\n    const [data,{loading,status,error}, fetch] = useFetch(getAgenda, {lazy:true})\n    const addDay = () =>setWhen(prevState => addDays(prevState, 1))\n    const removeDay = () => setWhen(prevState => subDays(prevState,1))\n\n    useEffect(() =>{\n        !auth.user && router.push('/')\n      },[auth.user])\n\n      useEffect(()=>{\n        fetch(when)\n      },[when])\n\n    return (\n        <Container>\n            <Header>\n                <Logo size={150} />\n                 <div>\n                    <Button onClick={logout}>Sair</Button>\n                </div>\n\n            </Header>\n\n        \n            <Box mt={8} display=\"flex\" alignIntens=\"center\">\n                <IconButton icon={<ChevronLeftIcon />} bg=\"trasparent\" onClick={removeDay}/>\n                <Box flex={1} textAlign=\"center\">{formatDate(when,'PPPP')}</Box>\n                <IconButton icon={<ChevronRightIcon />} bg=\"trasparent\" onClick={addDay}/>\n            </Box>\n            \n        \n        </Container>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}