{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nil/projetos/clocker/components/Auth/index.js\";\nimport * as React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { firebaseClient, persistenceMode } from '../../config/firebase/client';\nconst AuthContext = /*#__PURE__*/React.createContext([{}, () => {}]);\nexport const logout = () => firebaseClient.auth().signOut();\nexport const login = async ({\n  email,\n  password\n}) => {\n  firebaseClient.auth().setPersistence(persistenceMode);\n\n  try {\n    await firebaseClient.auth().signInWithEmailAndPassword(email, password);\n  } catch (error) {\n    console.log('LOGIN ERROR:', error);\n  }\n};\nexport const signup = async ({\n  email,\n  password,\n  username\n}) => {\n  try {\n    await firebaseClient.auth().createUserWithEmailAndPassword(email, password);\n    await login(email, password); //setupProfile(token, username)\n    //const {data} =  await axios({\n    //       method: 'post',\n    //       url: '/api/profile',\n    //       data:{\n    //         username:values.username\n    //       },\n    //       header:{\n    //         'Autentication':`Bearer ${user.getToken()}`\n    //         ,\n    //       }\n    //     })\n  } catch (error) {\n    console.log('SIGNUP ERROR:', error);\n  }\n};\nexport const useAuth = () => {\n  const {\n    0: auth\n  } = useContext(AuthContext);\n  return [auth, {\n    login,\n    logout,\n    signup\n  }];\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  const {\n    0: auth,\n    1: setAuth\n  } = useState({\n    loading: true,\n    user: false\n  });\n  useEffect(() => {\n    const unsubscribe = firebaseClient.auth().onAuthStateChanged(user => {\n      setAuth({\n        loading: false,\n        user\n      });\n    });\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: [auth, setAuth],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 6\n  }, this);\n};","map":{"version":3,"sources":["/home/nil/projetos/clocker/components/Auth/index.js"],"names":["React","useState","useEffect","useContext","firebaseClient","persistenceMode","AuthContext","createContext","logout","auth","signOut","login","email","password","setPersistence","signInWithEmailAndPassword","error","console","log","signup","username","createUserWithEmailAndPassword","useAuth","AuthProvider","children","setAuth","loading","user","unsubscribe","onAuthStateChanged"],"mappings":";;AAAC,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACD,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,8BAAhD;AACA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,CAAoB,CAAC,EAAD,EAAK,MAAK,CAAG,CAAb,CAApB,CAApB;AACA,OAAO,MAAMC,MAAM,GAAG,MAAMJ,cAAc,CAACK,IAAf,GAAsBC,OAAtB,EAArB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAO;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAP,KAA4B;AAC7CT,EAAAA,cAAc,CAACK,IAAf,GAAsBK,cAAtB,CAAqCT,eAArC;;AACA,MAAI;AACD,UAAMD,cAAc,CAACK,IAAf,GAAsBM,0BAAtB,CAAkDH,KAAlD,EAA0DC,QAA1D,CAAN;AACD,GAFF,CAEG,OAAOG,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;AACH;AACJ,CAPM;AAWP,OAAO,MAAMG,MAAM,GAAG,OAAO;AAACP,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBO,EAAAA;AAAlB,CAAP,KAAsC;AACxD,MAAI;AACA,UAAMhB,cAAc,CAACK,IAAf,GAAsBY,8BAAtB,CAAqDT,KAArD,EAA4DC,QAA5D,CAAN;AACA,UAAMF,KAAK,CAACC,KAAD,EAAQC,QAAR,CAAX,CAFA,CAGA;AAEA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACP,GAjBD,CAiBE,OAAOG,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACH;AACJ,CArBM;AAuBP,OAAO,MAAMM,OAAO,GAAG,MAAK;AACxB,QAAM;AAAA,OAACb;AAAD,MAASN,UAAU,CAACG,WAAD,CAAzB;AAEA,SAAO,CAACG,IAAD,EAAO;AAACE,IAAAA,KAAD;AAAQH,IAAAA,MAAR;AAAgBW,IAAAA;AAAhB,GAAP,CAAP;AACH,CAJM;AAKP,OAAO,MAAMI,YAAY,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AACrC,QAAM;AAAA,OAACf,IAAD;AAAA,OAAOgB;AAAP,MAAkBxB,QAAQ,CAAC;AAC7ByB,IAAAA,OAAO,EAAC,IADqB;AAE7BC,IAAAA,IAAI,EAAC;AAFwB,GAAD,CAAhC;AAKAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,WAAW,GAAGxB,cAAc,CAACK,IAAf,GAAsBoB,kBAAtB,CAAyCF,IAAI,IAAI;AACnEF,MAAAA,OAAO,CAAC;AACNC,QAAAA,OAAO,EAAE,KADH;AAENC,QAAAA;AAFM,OAAD,CAAP;AAID,KALmB,CAApB;AAMA,WAAO,MAAK,CAAE,CAAd;AACD,GARM,EAQJ,EARI,CAAT;AAUA,sBACC,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAAClB,IAAD,EAAMgB,OAAN,CAA7B;AAAA,cACID;AADJ;AAAA;AAAA;AAAA;AAAA,UADD;AAKH,CArBM","sourcesContent":[" import * as React from 'react'\nimport { useState, useEffect, useContext } from 'react'\nimport { firebaseClient, persistenceMode } from '../../config/firebase/client'\nconst AuthContext = React.createContext([{}, () =>{ }])\nexport const logout = () => firebaseClient.auth().signOut()\nexport const login = async ({email, password}) =>{\n    firebaseClient.auth().setPersistence(persistenceMode)\n    try {\n       await firebaseClient.auth().signInWithEmailAndPassword( email,  password)\n     } catch (error) {\n        console.log('LOGIN ERROR:', error)\n    }\n}\n\n\n \nexport const signup = async ({email, password, username}) =>{\n    try {\n        await firebaseClient.auth().createUserWithEmailAndPassword(email, password)\n        await login(email, password)\n        //setupProfile(token, username)\n        \n        //const {data} =  await axios({\n            //       method: 'post',\n            //       url: '/api/profile',\n            //       data:{\n            //         username:values.username\n            //       },\n            //       header:{\n            //         'Autentication':`Bearer ${user.getToken()}`\n            //         ,\n                  \n            //       }\n            //     })\n    } catch (error) {\n        console.log('SIGNUP ERROR:', error)        \n    }\n}\n\nexport const useAuth = () =>{\n    const [auth] = useContext(AuthContext) \n\n    return [auth, {login, logout, signup}]\n}\nexport const AuthProvider =({children})=>{\n    const [auth, setAuth] = useState({\n        loading:true,\n        user:false\n    })\n\n    useEffect(() => {\n        const unsubscribe = firebaseClient.auth().onAuthStateChanged(user => {\n          setAuth({\n            loading: false,\n            user\n          })\n        })\n        return () =>{}\n      }, [])\n\n    return(\n     <AuthContext.Provider value={[auth,setAuth]}>\n        {children}\n    </AuthContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}